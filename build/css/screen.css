{"version":3,"sources":["lib/_reset.sass","lib/_owl.carousel.scss","lib/_slick.scss","lib/_sprite.sass","screen.css","lib/_mixins.sass","_common.sass","../../node_modules/susy/sass/susy/output/shared/_inspect.scss","../../node_modules/susy/sass/susy/output/support/_rem.scss","../../node_modules/susy/sass/susy/language/susy/_container.scss","../../node_modules/susy/sass/susy/output/support/_background.scss","../../node_modules/susy/sass/susy/language/susy/_background.scss","../../node_modules/susy/sass/susy/output/shared/_background.scss","../../node_modules/susy/sass/susy/output/support/_clearfix.scss","../../node_modules/susy/sass/susy/language/susy/_gutters.scss","../../node_modules/susy/sass/susy/language/susy/_span.scss","../../node_modules/susy/sass/susy/output/float/_span.scss","../../node_modules/susy/sass/susy/language/susy/_margins.scss","../../node_modules/susy/sass/susy/language/susy/_padding.scss"],"names":[],"mappings":"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","file":"screen.css","sourcesContent":["html, body, div, span, applet, object, iframe,h1, h2, h3, h4, h5,\nh6, p, blockquote, pre,a, abbr, acronym, address, big,\ncite, code,del, dfn, em, img, ins, kbd, q, s, samp,small,\nstrike, strong, sub, sup, tt, var,b, u, i, center,dl, dt,\ndd, ol, ul, li,fieldset, form, label, legend,table, caption,\ntbody, tfoot, thead, tr, th, td,article, aside, canvas, details,\nembed, figure, figcaption, footer, header, hgroup, menu, nav,\noutput, ruby, section, summary,time, mark, audio, video\n    margin: 0 \n    padding: 0\n    border: 0\n    vertical-align: baseline\nbody, html\n    height: 100%    \nimg,fieldset, a img\n    border: none\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"tel\"],\ntextarea\n    -webkit-appearance: none\ninput[type=\"submit\"],\nbutton\n    cursor: pointer\n    &::-moz-focus-inner\n        padding: 0\n        border: 0\ntextarea \n    overflow: auto\ninput, button \n    margin: 0\n    padding: 0\n    border: 0\ndiv, input, textarea, select,button,\nh1,h2,h3,h4,h5,h6,a,span,a:focus \n    outline: none\nul,ol    \n    list-style-type: none\ntable\n    border-spacing: 0\n    border-collapse: collapse\n    width: 100%\n.disable-hover\n    pointer-events: none !important\n*\n    box-sizing: border-box\na\n    color: inherit","/* \n *  Core Owl Carousel CSS File\n */\n.owl-carousel {\n  display: none;\n  width: 100%;\n  -webkit-tap-highlight-color: transparent;\n  /* position relative and z-index fix webkit rendering fonts issue */\n  position: relative;\n  z-index: 1;\n}\n.owl-carousel .owl-stage {\n  position: relative;\n  -ms-touch-action: pan-Y;\n}\n.owl-carousel .owl-stage:after {\n  content: \".\";\n  display: block;\n  clear: both;\n  visibility: hidden;\n  line-height: 0;\n  height: 0;\n}\n.owl-carousel .owl-stage-outer {\n  position: relative;\n  overflow: hidden;\n  /* fix for flashing background */\n  -webkit-transform: translate3d(0px, 0px, 0px);\n}\n.owl-carousel .owl-item {\n  position: relative;\n  min-height: 1px;\n  float: left;\n  -webkit-backface-visibility: hidden;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n.owl-carousel .owl-item img {\n  display: block;\n  width: 100%;\n  -webkit-transform-style: preserve-3d;\n}\n.owl-carousel .owl-nav.disabled,\n.owl-carousel .owl-dots.disabled {\n  display: none;\n}\n.owl-carousel .owl-nav .owl-prev,\n.owl-carousel .owl-nav .owl-next,\n.owl-carousel .owl-dot {\n  cursor: pointer;\n  cursor: hand;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.owl-carousel.owl-loaded {\n  display: block;\n}\n.owl-carousel.owl-loading {\n  opacity: 0;\n  display: block;\n}\n.owl-carousel.owl-hidden {\n  opacity: 0;\n}\n.owl-carousel.owl-refresh .owl-item {\n  display: none;\n}\n.owl-carousel.owl-drag .owl-item {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.owl-carousel.owl-grab {\n  cursor: move;\n  cursor: -webkit-grab;\n  cursor: -o-grab;\n  cursor: -ms-grab;\n  cursor: grab;\n}\n.owl-carousel.owl-rtl {\n  direction: rtl;\n}\n.owl-carousel.owl-rtl .owl-item {\n  float: right;\n}\n\n/* No Js */\n.no-js .owl-carousel {\n  display: block;\n}\n","/* Slider */\n\n.slick-slider {\n    position: relative;\n    display: block;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    -ms-touch-action: pan-y;\n    touch-action: pan-y;\n    -webkit-tap-highlight-color: transparent;\n}\n.slick-list {\n    position: relative;\n    overflow: hidden;\n    display: block;\n    margin: 0;\n    padding: 0;\n\n    &:focus {\n        outline: none;\n    }\n\n    &.dragging {\n        cursor: pointer;\n        cursor: hand;\n    }\n}\n.slick-slider .slick-track,\n.slick-slider .slick-list {\n    -webkit-transform: translate3d(0, 0, 0);\n    -moz-transform: translate3d(0, 0, 0);\n    -ms-transform: translate3d(0, 0, 0);\n    -o-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n}\n\n.slick-track {\n    position: relative;\n    left: 0;\n    top: 0;\n    display: block;\n\n    &:before,\n    &:after {\n        content: \"\";\n        display: table;\n    }\n\n    &:after {\n        clear: both;\n    }\n\n    .slick-loading & {\n        visibility: hidden;\n    }\n}\n.slick-slide {\n    float: left;\n    height: 100%;\n    min-height: 1px;\n    [dir=\"rtl\"] & {\n        float: right;\n    }\n    img {\n        display: block;\n    }\n    &.slick-loading img {\n        display: none;\n    }\n\n    display: none;\n\n    &.dragging img {\n        pointer-events: none;\n    }\n\n    .slick-initialized & {\n        display: block;\n    }\n\n    .slick-loading & {\n        visibility: hidden;\n    }\n\n    .slick-vertical & {\n        display: block;\n        height: auto;\n        border: 1px solid transparent;\n    }\n}\n.slick-arrow.slick-hidden {\n    display: none;\n}\n","$icons: (0:0)\n$icons: map-merge($icons,(phone: (X: 0px, Y:0px, W: 16px, H: 15px, TW: 32px, TH: 15px, IMG: '../img/icons.png')))\n$icons: map-merge($icons,(user: (X: -20px, Y:0px, W: 12px, H: 13px, TW: 32px, TH: 15px, IMG: '../img/icons.png')))\n\n\n// Gets an attribute from the sass map\n@function icon-attr($icon, $attr)\n\t$icon: map-get($icons, $icon)\n\t@return map-get($icon, $attr)\n\n@mixin sprite($iconName)\n\tbackground-image: url(icon-attr($iconName, IMG))\n\twidth: icon-attr($iconName, W)\n\theight: icon-attr($iconName, H)\n\tbackground-position: icon-attr($iconName, X) icon-attr($iconName, Y)\n@mixin sprite-position($iconName)\n\tbackground-position: icon-attr($iconName, X) icon-attr($iconName, Y)\n@mixin sprite-retina($iconName)\n\tbackground-image: url(icon-attr($iconName, IMG))\n\t$width: icon-attr($iconName, W)\n\t$height: icon-attr($iconName, H)\n\twidth: $width/2\n\theight: $height/2\n\t$x: icon-attr($iconName, X)\n\t$y: icon-attr($iconName, Y)\n\tbackground-position: $x/2 $y/2\n\t$tw: icon-attr($iconName, TW) \t\n\t$th: icon-attr($iconName, TH)\n\tbackground-size: $tw/2 $th/2\n@mixin sprite-position-retina($iconName)\n\t$x: icon-attr($iconName, X)\n\t$y: icon-attr($iconName, Y)\n\tbackground-position: $x/2 $y/2\n\n\n@mixin s($i)\n\t+sprite($i)\n@mixin sp($i)\n\t+sprite-position($i)\n@mixin sr($i)\n\t+sprite-retina($i)\n@mixin spr($i)\n\t+sprite-position-retina($i)\n\n.icon-phone\n\twidth: 16px\n\theight: 15px\n\tbackground-image: url('../img/icons.png')\n\tbackground-position: 0px 0px\n\tbackground-size: 32px 15px\n.icon-user\n\twidth: 12px\n\theight: 13px\n\tbackground-image: url('../img/icons.png')\n\tbackground-position: -20px 0px\n\tbackground-size: 32px 15px\n","html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5,\nh6, p, blockquote, pre, a, abbr, acronym, address, big,\ncite, code, del, dfn, em, img, ins, kbd, q, s, samp, small,\nstrike, strong, sub, sup, tt, var, b, u, i, center, dl, dt,\ndd, ol, ul, li, fieldset, form, label, legend, table, caption,\ntbody, tfoot, thead, tr, th, td, article, aside, canvas, details,\nembed, figure, figcaption, footer, header, hgroup, menu, nav,\noutput, ruby, section, summary, time, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline; }\n\nbody, html {\n  height: 100%; }\n\nimg, fieldset, a img {\n  border: none; }\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ninput[type=\"tel\"],\ntextarea {\n  -webkit-appearance: none; }\n\ninput[type=\"submit\"],\nbutton {\n  cursor: pointer; }\n  input[type=\"submit\"]::-moz-focus-inner,\n  button::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n\ntextarea {\n  overflow: auto; }\n\ninput, button {\n  margin: 0;\n  padding: 0;\n  border: 0; }\n\ndiv, input, textarea, select, button,\nh1, h2, h3, h4, h5, h6, a, span, a:focus {\n  outline: none; }\n\nul, ol {\n  list-style-type: none; }\n\ntable {\n  border-spacing: 0;\n  border-collapse: collapse;\n  width: 100%; }\n\n.disable-hover {\n  pointer-events: none !important; }\n\n* {\n  box-sizing: border-box; }\n\na {\n  color: inherit; }\n\n/* \n *  Core Owl Carousel CSS File\n */\n.owl-carousel {\n  display: none;\n  width: 100%;\n  -webkit-tap-highlight-color: transparent;\n  /* position relative and z-index fix webkit rendering fonts issue */\n  position: relative;\n  z-index: 1; }\n\n.owl-carousel .owl-stage {\n  position: relative;\n  -ms-touch-action: pan-Y; }\n\n.owl-carousel .owl-stage:after {\n  content: \".\";\n  display: block;\n  clear: both;\n  visibility: hidden;\n  line-height: 0;\n  height: 0; }\n\n.owl-carousel .owl-stage-outer {\n  position: relative;\n  overflow: hidden;\n  /* fix for flashing background */\n  -webkit-transform: translate3d(0px, 0px, 0px); }\n\n.owl-carousel .owl-item {\n  position: relative;\n  min-height: 1px;\n  float: left;\n  -webkit-backface-visibility: hidden;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none; }\n\n.owl-carousel .owl-item img {\n  display: block;\n  width: 100%;\n  -webkit-transform-style: preserve-3d; }\n\n.owl-carousel .owl-nav.disabled,\n.owl-carousel .owl-dots.disabled {\n  display: none; }\n\n.owl-carousel .owl-nav .owl-prev,\n.owl-carousel .owl-nav .owl-next,\n.owl-carousel .owl-dot {\n  cursor: pointer;\n  cursor: hand;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n.owl-carousel.owl-loaded {\n  display: block; }\n\n.owl-carousel.owl-loading {\n  opacity: 0;\n  display: block; }\n\n.owl-carousel.owl-hidden {\n  opacity: 0; }\n\n.owl-carousel.owl-refresh .owl-item {\n  display: none; }\n\n.owl-carousel.owl-drag .owl-item {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n.owl-carousel.owl-grab {\n  cursor: move;\n  cursor: -webkit-grab;\n  cursor: -o-grab;\n  cursor: -ms-grab;\n  cursor: grab; }\n\n.owl-carousel.owl-rtl {\n  direction: rtl; }\n\n.owl-carousel.owl-rtl .owl-item {\n  float: right; }\n\n/* No Js */\n.no-js .owl-carousel {\n  display: block; }\n\n/* Slider */\n.slick-slider {\n  position: relative;\n  display: block;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -ms-touch-action: pan-y;\n  touch-action: pan-y;\n  -webkit-tap-highlight-color: transparent; }\n\n.slick-list {\n  position: relative;\n  overflow: hidden;\n  display: block;\n  margin: 0;\n  padding: 0; }\n  .slick-list:focus {\n    outline: none; }\n  .slick-list.dragging {\n    cursor: pointer;\n    cursor: hand; }\n\n.slick-slider .slick-track,\n.slick-slider .slick-list {\n  -webkit-transform: translate3d(0, 0, 0);\n  -moz-transform: translate3d(0, 0, 0);\n  -ms-transform: translate3d(0, 0, 0);\n  -o-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0); }\n\n.slick-track {\n  position: relative;\n  left: 0;\n  top: 0;\n  display: block; }\n  .slick-track:before, .slick-track:after {\n    content: \"\";\n    display: table; }\n  .slick-track:after {\n    clear: both; }\n  .slick-loading .slick-track {\n    visibility: hidden; }\n\n.slick-slide {\n  float: left;\n  height: 100%;\n  min-height: 1px;\n  display: none; }\n  [dir=\"rtl\"] .slick-slide {\n    float: right; }\n  .slick-slide img {\n    display: block; }\n  .slick-slide.slick-loading img {\n    display: none; }\n  .slick-slide.dragging img {\n    pointer-events: none; }\n  .slick-initialized .slick-slide {\n    display: block; }\n  .slick-loading .slick-slide {\n    visibility: hidden; }\n  .slick-vertical .slick-slide {\n    display: block;\n    height: auto;\n    border: 1px solid transparent; }\n\n.slick-arrow.slick-hidden {\n  display: none; }\n\n.icon-phone {\n  width: 16px;\n  height: 15px;\n  background-image: url(\"../img/icons.png\");\n  background-position: 0px 0px;\n  background-size: 32px 15px; }\n\n.icon-user {\n  width: 12px;\n  height: 13px;\n  background-image: url(\"../img/icons.png\");\n  background-position: -20px 0px;\n  background-size: 32px 15px; }\n\n@font-face {\n  font-family: \"Calibri Light\";\n  src: url(\"../css/fonts/subset-Calibri-Light.eot\");\n  src: url(\"../css/fonts/subset-Calibri-Light.eot?#iefix\") format(\"embedded-opentype\"), url(\"../css/fonts/subset-Calibri-Light.woff\") format(\"woff\"), url(\"../css/fonts/subset-Calibri-Light.woff2\") format(\"woff2\"), url(\"../css/fonts/subset-Calibri-Light.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal; }\n@font-face {\n  font-family: \"Calibri\";\n  src: url(\"../css/fonts/subset-Calibri.eot\");\n  src: url(\"../css/fonts/subset-Calibri.eot?#iefix\") format(\"embedded-opentype\"), url(\"../css/fonts/subset-Calibri.woff\") format(\"woff\"), url(\"../css/fonts/subset-Calibri.woff2\") format(\"woff2\"), url(\"../css/fonts/subset-Calibri.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal; }\n@font-face {\n  font-family: \"Calibri Bold\";\n  src: url(\"../css/fonts/subset-Calibri-Bold.eot\");\n  src: url(\"../css/fonts/subset-Calibri-Bold.eot?#iefix\") format(\"embedded-opentype\"), url(\"../css/fonts/subset-Calibri-Bold.woff\") format(\"woff\"), url(\"../css/fonts/subset-Calibri-Bold.woff2\") format(\"woff2\"), url(\"../css/fonts/subset-Calibri-Bold.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal; }\n/* ==========================================================================\n * Main Styles\n * ========================================================================== */\na:hover, a:focus {\n  text-decoration: none; }\n\na {\n  color: inherit;\n  text-decoration: none; }\n\nsvg {\n  width: 100%;\n  height: 100%; }\n\n.is-hidden {\n  display: none; }\n\n.row:before, .row:after {\n  content: \"\";\n  display: table; }\n.row:after {\n  clear: both; }\n\nbody {\n  min-width: 1000px;\n  font-family: \"Calibri\", Arial, sans-serif;\n  font-size: 16px;\n  color: #343c44;\n  line-height: 1.375;\n  background-color: #ffffff; }\n\n.wrapper {\n  overflow: hidden;\n  margin: 0 auto;\n  min-height: 100%;\n  padding-bottom: 40px; }\n\n.wrap {\n  -susy-container: (container: 1000px, gutter-position: inside, columns: 12, gutters: 1, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n  -susy-show-grid: (container: 1000px, gutter-position: inside, columns: 12, gutters: 1, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));\n  background-image: linear-gradient(to right, rgba(203, 48, 48, 0.25), rgba(220, 107, 107, 0.25));\n  background-size: 8.33333%;\n  background-origin: content-box;\n  background-clip: content-box;\n  background-position: left top;\n  -susy-background-grid: (container: 1000px, gutter-position: inside, columns: 12, gutters: 1, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));\n  transition: all 0.3s; }\n  .wrap:after {\n    content: \" \";\n    display: block;\n    clear: both; }\n\n/* ==========================================================================\n * Header\n * ========================================================================== */\n.header__btn {\n  margin-bottom: 10px;\n  width: 100%;\n  height: 40px;\n  font-size: 16px;\n  color: #ffffff;\n  line-height: 40px;\n  text-align: center;\n  border-radius: 6px;\n  background-color: transparent; }\n  .header__btn_red {\n    background-color: #d2252b; }\n  .header__btn_grey {\n    background-color: #40403e; }\n.header-top {\n  background-color: #40403e;\n  font-family: \"Calibri\", Arial, sans-serif;\n  font-size: 14px;\n  color: #f1f0ef; }\n  .header-top:before, .header-top:after {\n    content: \"\";\n    display: table; }\n  .header-top:after {\n    clear: both; }\n.header-links {\n  float: right;\n  padding-left: 2.08333%;\n  padding-right: 2.08333%; }\n  .header-links:before, .header-links:after {\n    content: \"\";\n    display: table; }\n  .header-links:after {\n    clear: both; }\n  .header-links__item {\n    float: left;\n    padding: 5px;\n    background-color: #20201e; }\n    .header-links__item + .header-links__item {\n      border-left: 1px dotted #f1f0ef; }\n  .header-links__link {\n    text-decoration: underline; }\n    .header-links__link:hover {\n      text-decoration: underline; }\n.header-mid {\n  padding-top: 45px;\n  padding-bottom: 45px;\n  font-family: \"Calibri Light\", Arial, sans-serif;\n  font-size: 16px;\n  background-color: #f1f0ef; }\n  .header-mid:before, .header-mid:after {\n    content: \"\";\n    display: table; }\n  .header-mid:after {\n    clear: both; }\n  .header-mid__col {\n    -susy-span: 3;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    width: 25%;\n    float: left;\n    padding-left: 2.08333%;\n    padding-right: 2.08333%;\n    -susy-nested: (span: 3); }\n\n.nav {\n  float: left;\n  padding-left: 2.08333%;\n  padding-right: 2.08333%; }\n  .nav:before, .nav:after {\n    content: \"\";\n    display: table; }\n  .nav:after {\n    clear: both; }\n  .nav__item {\n    float: left; }\n    .nav__item + .nav__item {\n      margin-left: 15px; }\n  .nav__link {\n    display: block;\n    padding-top: 5px;\n    padding-bottom: 5px; }\n    .nav__link:hover, .nav__link.is-active {\n      text-decoration: underline; }\n\n.logo {\n  position: relative;\n  top: -5px; }\n  .logo__link {\n    overflow: hidden;\n    display: block;\n    width: auto;\n    height: 120px;\n    text-indent: -9999px;\n    font-family: \"Lucida Console\", Monaco, monospace;\n    font-size: 16px;\n    font-weight: bold;\n    text-transform: uppercase;\n    text-align: center;\n    background: url(\"../img/logo.png\") center center no-repeat;\n    background-size: 100% auto; }\n\n.location {\n  color: #f1f0ef; }\n  .location__text {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    font-family: Arial, sans-serif;\n    font-size: 14px;\n    color: #6f6f68; }\n  .location__link {\n    position: relative;\n    display: inline-block;\n    color: #009fe0;\n    letter-spacing: -0.03em; }\n    .location__link:after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: 1px;\n      height: 1px;\n      border-top: 1px dotted #009fe0; }\n  .location__country {\n    display: inline-block;\n    padding: 2px 10px;\n    background-color: #20201e; }\n  .location .selectric {\n    border: none;\n    background-color: transparent; }\n    .location .selectric .label {\n      position: relative;\n      margin: 0;\n      padding-top: 2px;\n      height: auto;\n      line-height: 1.375;\n      font-size: inherit;\n      color: #f1f0ef; }\n      .location .selectric .label:after {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        right: 0;\n        bottom: 1px;\n        height: 1px;\n        border-top: 1px dotted #f1f0ef; }\n    .location .selectric .button {\n      display: none; }\n    .location .selectric-wrapper {\n      display: inline-block;\n      vertical-align: middle; }\n  .location .selectric-open .selectric-items {\n    min-width: 120px; }\n  .location .selectric-items {\n    margin-top: 1px;\n    border-color: #6f6f68; }\n    .location .selectric-items li {\n      padding: 1px 8px;\n      color: #f1f0ef;\n      background-color: #20201e; }\n      .location .selectric-items li.selected {\n        color: #f1f0ef;\n        background-color: #6f6f68; }\n\n.header-contacts__phone {\n  display: inline-block;\n  margin-bottom: 9px;\n  font-size: 22px;\n  color: #6f6f68; }\n.header-contacts__mail {\n  position: relative;\n  display: inline-block;\n  font-size: 14px;\n  color: #009fe0; }\n  .header-contacts__mail:after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 1px;\n    height: 1px;\n    border-top: 1px dotted #009fe0; }\n\n.header-bot {\n  background-color: #20201e; }\n  .header-bot-links {\n    -susy-span: full;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    width: 100%;\n    float: left;\n    padding-left: 2.08333%;\n    padding-right: 2.08333%; }\n    .header-bot-links:before, .header-bot-links:after {\n      content: \"\";\n      display: table; }\n    .header-bot-links:after {\n      clear: both; }\n    .header-bot-links__item {\n      -susy-span: 4;\n      -moz-box-sizing: border-box;\n      -webkit-box-sizing: border-box;\n      box-sizing: border-box;\n      width: 33.33333%;\n      float: left;\n      padding-left: 2.08333%;\n      padding-right: 2.08333%;\n      -susy-nested: (span: 4);\n      color: #f1f0ef;\n      text-align: center;\n      border-left: 1px dotted #f1f0ef;\n      transition: all 0.3s; }\n      .header-bot-links__item:last-child {\n        border-right: 1px dotted #f1f0ef; }\n      .header-bot-links__item:hover {\n        color: #20201e;\n        background-color: #f1f0ef;\n        transition: all 0.3s; }\n    .header-bot-links__link {\n      display: block;\n      padding-top: 3px;\n      padding-bottom: 3px; }\n\n/* ==========================================================================\n * Footer\n * ========================================================================== */\n.footer {\n  margin-top: -40px;\n  height: 40px; }\n\n/* ==========================================================================\n * Main\n * ========================================================================== */\n.title {\n  margin-bottom: 45px;\n  font-family: \"Calibri Bold\", Arial, sans-serif;\n  font-size: 36px;\n  color: #20201e;\n  line-height: 1;\n  font-weight: normal;\n  text-transform: uppercase;\n  text-align: center;\n  -susy-span: full;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  width: 100%;\n  float: left;\n  padding-left: 2.08333%;\n  padding-right: 2.08333%; }\n\n.section {\n  padding-top: 45px;\n  padding-bottom: 45px; }\n  .section_1 {\n    background: url(\"../img/backgrounds/bg-1.jpg\");\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: 50% 50%; }\n    .section_1 .title {\n      font-size: 40px;\n      color: #ffffff;\n      text-align: left; }\n\n.form {\n  -susy-span: 9;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  width: 75%;\n  float: left;\n  padding-left: 2.08333%;\n  padding-right: 2.08333%;\n  -susy-nested: (span: 9);\n  -susy-pre: 3;\n  margin-left: 25%; }\n  .form-wrap {\n    padding-top: 25px;\n    padding-bottom: 25px;\n    background: #f1f0ef url(\"../img/backgrounds/bg-2.png\") -115px 0 no-repeat;\n    background-size: auto 120%;\n    border-radius: 10px; }\n    .form-wrap:before, .form-wrap:after {\n      content: \"\";\n      display: table; }\n    .form-wrap:after {\n      clear: both; }\n  .form-title {\n    margin-bottom: 45px;\n    font-family: \"PT Sans\", Arial, sans-serif;\n    font-weight: 400;\n    font-size: 18px;\n    color: #1e242a;\n    line-height: 1;\n    -susy-span: 9;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    width: 75%;\n    float: left;\n    padding-left: 2.08333%;\n    padding-right: 2.08333%;\n    -susy-nested: (span: 9);\n    -susy-pre: 3;\n    margin-left: 25%; }\n    .form-title_mod {\n      color: #d2252b;\n      font-weight: bold; }\n  .form__field {\n    position: relative;\n    -susy-span: 3 of 9 no-gutters;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n    width: 33.33333%;\n    float: left;\n    -susy-nested: (span: 3, gutter-override: no-gutters, columns: 9);\n    -susy-suffix: 2.08333%;\n    padding-right: 4.16667%; }\n    .form__field .icon {\n      position: absolute;\n      left: 15px;\n      top: 15px; }\n  .form__input {\n    width: 100%;\n    padding-left: 40px;\n    padding-right: 10px;\n    height: 44px;\n    font-family: \"PT Sans\", Arial, sans-serif;\n    font-weight: 400;\n    font-size: inherit;\n    color: #76787c;\n    line-height: 44px;\n    border: 3px solid #dcdede;\n    background-color: #ffffff;\n    border-radius: 6px; }\n    .form__input:-moz-placeholder, .form__input::-moz-placeholder {\n      color: #c4c5c7;\n      opacity: 1; }\n    .form__input::-webkit-input-placeholder {\n      color: #c4c5c7; }\n  .form__submit {\n    position: relative;\n    top: 3px;\n    position: relative;\n    width: calc(100% - 6px);\n    height: 38px;\n    font-family: \"PT Sans\", Arial, sans-serif;\n    font-weight: 700;\n    font-size: inherit;\n    color: #ffffff;\n    line-height: 38px;\n    text-transform: uppercase;\n    background-color: #dd2530;\n    box-shadow: 0 0 0 3px #dcdede;\n    border-radius: 4px;\n    border-bottom: 2px solid #a71e22;\n    text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.3);\n    transition: all 0.3s; }\n    .form__submit:before {\n      content: \"\";\n      position: absolute;\n      left: 2px;\n      right: 2px;\n      bottom: 0;\n      height: 1px;\n      background-color: #d9453a; }\n    .form__submit:hover {\n      background-color: #c91f2a;\n      transition: all 0.3s; }\n\n/* ==========================================================================\n * Other Styles\n * ========================================================================== */\n\n\n","// px to em\n$browser-context: 16\n@function em($pixels, $context: $browser-context)\n\t@return #{$pixels/$context}em\n\n// clearfix\n=pie-clearfix\n\t&:before, &:after\n\t\tcontent: \"\"\n\t\tdisplay: table\n\t&:after\n\t\tclear: both\n\n// circle\n=circle-fix($circle-width, $circle-color)\n\tborder-radius: 50%\n\tborder: $circle-width+px solid $circle-color\n\tbox-shadow: 0 0 1px $circle-color\n\n=circle-in-fix($circle-width, $circle-color)\n\tborder-radius: 50%\n\tborder: $circle-width+px solid $circle-color\n\tbox-shadow: 0 0 1px $circle-color, inset 0 0 1px $circle-color\n\n// width\n=r($width)\n\t@media only screen and (max-width: $width+ \"px\")\n\t\t@content\n\n// font-face\n=font($alias, $name)\n\t@font-face\n\t\tfont-family: $alias\n\t\tsrc: url(\"../css/fonts/\" + $name + \".eot\")\n\t\tsrc: url(\"../css/fonts/\" + $name + \".eot?#iefix\") format(\"embedded-opentype\"), url(\"../css/fonts/\" + $name + \".woff\") format(\"woff\"), url(\"../css/fonts/\" + $name + \".woff2\") format(\"woff2\"), url(\"../css/fonts/\" + $name + \".ttf\") format(\"truetype\")\n\t\tfont-weight: normal\n\t\tfont-style: normal\n// cover\n=cover\n\tbackground-repeat: no-repeat\n\tbackground-size: cover\n\tbackground-position: 50% 50%\n\n// placeholder\n=placeholder-color($color)\n\t&:-moz-placeholder,\n\t&::-moz-placeholder\n\t\tcolor: $color\n\t\topacity: 1\n\t&::-webkit-input-placeholder\n\t\tcolor: $color\n\n// unselectable\n=unselectable\n\t-webkit-touch-callout: none\n\t-webkit-user-select: none\n\t-khtml-user-select: none\n\t-moz-user-select: none\n\t-ms-user-select: none\n\tuser-select: none\n\n=nosel\n\t+unselectable\n\n// selection\n=selection\n\t& ::selection\n\t\t@content\n\t& ::-moz-selection\n\t\t@content\n\n//triangle\n=arr($width, $height, $bg, $direction)\n\twidth: 0px\n\theight: 0px\n\tborder-style: solid\n\t@if $direction == t\n\t\tborder-width: 0 $width / 2 + px $height + px $width / 2 + px\n\t\tborder-color: transparent transparent $bg transparent\n\t@if $direction == r\n\t\tborder-width: $height / 2 + px 0 $height / 2 + px $width + px\n\t\tborder-color: transparent transparent transparent $bg\n\t@if $direction == b\n\t\tborder-width: $height + px $width / 2 + px 0 $width / 2 + px\n\t\tborder-color: $bg transparent transparent transparent\n\t@if $direction == l\n\t\tborder-width: $height / 2 + px $width + px $height / 2 + px 0\n\t\tborder-color: transparent $bg transparent transparent\n\t@if $direction == tl\n\t\tborder-width: $height + px $width + px 0 0\n\t\tborder-color: $bg transparent transparent transparent\n\t@if $direction == tr\n\t\tborder-width: 0 $width + px $height + px 0\n\t\tborder-color: transparent $bg transparent transparent\n\t@if $direction == br\n\t\tborder-width: 0 0 $height + px $width + px\n\t\tborder-color: transparent transparent $bg transparent\n\t@if $direction == bl\n\t\tborder-width: $width + px 0 0 $height + px\n\t\tborder-color: transparent transparent transparent $bg\n// example\n// +arr(500,50, #000, l)\n// +arr(500,50, #000, bl)\n\n=vcenter\n\tposition: absolute\n\ttop: 50%\n\tleft: 50%\n\ttransform: translate(-50%,-50%)\n\n=vertical\n\twhite-space: nowrap\n\t&:before\n\t\tcontent: \"\"\n\t\tdisplay: inline-block\n\t\tvertical-align: middle\n\t\twidth: 0\n\t\theight: 100%\n\t\tmargin-right: -0.25em\n\n=hide-text\n\tfont: 0/0 a\n\ttext-shadow: none\n\tcolor: transparent\n=hidetext\n\t+hide-text\n\n=text-overflow\n\toverflow: hidden\n\t-ms-text-overflow: ellipsis\n\ttext-overflow: ellipsis\n\twhite-space: nowrap\n\n=ratio($width, $height)\n\tposition: relative\n\t&:before\n\t\tdisplay: block\n\t\tcontent: \"\"\n\t\twidth: 100%\n\t\tpadding-top: ($height / $width) * 100%\n\t\t\n=ratio-in\n\tposition: absolute\n\ttop: 0\n\tleft: 0\n\tright: 0\n\tbottom: 0","// fonts\n$default-fonts: Arial, sans-serif\n\n+font('Calibri Light', 'subset-Calibri-Light')\n+font('Calibri', 'subset-Calibri')\n+font('Calibri Bold', 'subset-Calibri-Bold')\n\n=calibri-l\n\tfont-family: 'Calibri Light', $default-fonts\n=calibri\n\tfont-family: 'Calibri', $default-fonts\n=calibri-b\n\tfont-family: 'Calibri Bold', $default-fonts\n=sans\n\tfont-family: 'PT Sans', $default-fonts\n\tfont-weight: 400\n=sans-b\n\tfont-family: 'PT Sans', $default-fonts\n\tfont-weight: 700\n\n// colors\n$red: #d2252b\n$grey: #41464c\n$dark: #20201e\n$light: #f1f0ef\n$white: #ffffff\n\n/* ==========================================================================\n\t Main Styles\n\t ========================================================================== */\na:hover, a:focus\n\ttext-decoration: none\na\n\tcolor: inherit\n\ttext-decoration: none\nsvg\n\twidth: 100%\n\theight: 100%\n.is-hidden\n\tdisplay: none\n.row\n\t+pie-clearfix\n// *\n// \t+selection\n// \t\tcolor: #fff\n// \t\tbackground-color: $red\nbody\n\tmin-width: 1000px\n\t+calibri\n\tfont-size: 16px\n\tcolor: #343c44\n\tline-height: 1.375\n\tbackground-color: #ffffff\n.wrapper\n\toverflow: hidden\n\tmargin: 0 auto\n\tmin-height: 100%\n\tpadding-bottom: 40px\n.wrap\n\t+container\n\ttransition: all 0.3s\n/* ==========================================================================\n\t Header\n\t ========================================================================== */\n.header\n\t&__btn\n\t\tmargin-bottom: 10px\n\t\twidth: 100%\n\t\theight: 40px\n\t\tfont-size: 16px\n\t\tcolor: #ffffff\n\t\tline-height: 40px\n\t\ttext-align: center\n\t\tborder-radius: 6px\n\t\tbackground-color: transparent\n\t\t&_red\n\t\t\tbackground-color: $red\n\t\t&_grey\n\t\t\tbackground-color: #40403e\n\t&-top\n\t\tbackground-color: #40403e\n\t\t+calibri\n\t\tfont-size: 14px\n\t\tcolor: $light\n\t\t+pie-clearfix\n\t&-links\n\t\tfloat: right\n\t\tpadding-left: +gutter()\n\t\tpadding-right: +gutter()\n\t\t+pie-clearfix\n\t\t&__item\n\t\t\tfloat: left\n\t\t\tpadding: 5px\n\t\t\tbackground-color: $dark\n\t\t\t& + &\n\t\t\t\tborder-left: 1px dotted $light\n\t\t&__link\n\t\t\ttext-decoration: underline\n\t\t\t&:hover\n\t\t\t\ttext-decoration: underline\n\t&-mid\n\t\tpadding-top: 45px\n\t\tpadding-bottom: 45px\n\t\t+calibri-l\n\t\tfont-size: 16px\n\t\tbackground-color: $light\n\t\t+pie-clearfix\n\t\t&__col\n\t\t\t+span(3)\n.nav\n\tfloat: left\n\tpadding-left: +gutter()\n\tpadding-right: +gutter()\n\t+pie-clearfix\n\t&__item\n\t\tfloat: left\n\t\t& + &\n\t\t\tmargin-left: 15px\n\t&__link\n\t\tdisplay: block\n\t\tpadding-top: 5px\n\t\tpadding-bottom: 5px\n\t\t&:hover,\n\t\t&.is-active\n\t\t\ttext-decoration: underline\n.logo\n\tposition: relative\n\ttop: -5px\n\t&__link\n\t\toverflow: hidden\n\t\tdisplay: block\n\t\twidth: auto\n\t\theight: 120px\n\t\ttext-indent: -9999px\n\t\tfont-family: \"Lucida Console\", Monaco, monospace\n\t\tfont-size: 16px\n\t\tfont-weight: bold\n\t\ttext-transform: uppercase\n\t\ttext-align: center\n\t\tbackground: url('../img/logo.png') center center no-repeat\n\t\tbackground-size: 100% auto\n.location\n\tcolor: $light\n\t&__text\n\t\tmargin-top: 10px\n\t\tmargin-bottom: 10px\n\t\tfont-family: $default-fonts\n\t\tfont-size: 14px\n\t\tcolor: lighten($dark,30)\n\t&__link\n\t\tposition: relative\n\t\tdisplay: inline-block\n\t\tcolor: #009fe0\n\t\tletter-spacing: -0.03em\n\t\t&:after\n\t\t\tcontent: ''\n\t\t\tposition: absolute\n\t\t\tleft: 0\n\t\t\tright: 0\n\t\t\tbottom: 1px\n\t\t\theight: 1px\n\t\t\tborder-top: 1px dotted #009fe0\n\t&__country\n\t\tdisplay: inline-block\n\t\tpadding: 2px 10px\n\t\tbackground-color: $dark\n\t.selectric\n\t\tborder: none\n\t\tbackground-color: transparent\n\t\t.label\n\t\t\tposition: relative\n\t\t\tmargin: 0\n\t\t\tpadding-top: 2px\n\t\t\theight: auto\n\t\t\tline-height: 1.375\n\t\t\tfont-size: inherit\n\t\t\tcolor: $light\n\t\t\t&:after\n\t\t\t\tcontent: ''\n\t\t\t\tposition: absolute\n\t\t\t\tleft: 0\n\t\t\t\tright: 0\n\t\t\t\tbottom: 1px\n\t\t\t\theight: 1px\n\t\t\t\tborder-top: 1px dotted $light\n\t\t.button\n\t\t\tdisplay: none\n\t\t&-wrapper\n\t\t\tdisplay: inline-block\n\t\t\tvertical-align: middle\n\t.selectric-open\n\t\t.selectric-items\n\t\t\tmin-width: 120px\n\t.selectric-items\n\t\tmargin-top: 1px\n\t\tborder-color: lighten($dark,30)\n\t\tli\n\t\t\tpadding: 1px 8px\n\t\t\tcolor: $light\n\t\t\tbackground-color: $dark\n\t\t\t&.selected\n\t\t\t\tcolor: $light\n\t\t\t\tbackground-color: lighten($dark,30)\n.header-contacts\n\t&__phone\n\t\tdisplay: inline-block\n\t\tmargin-bottom: 9px\n\t\tfont-size: 22px\n\t\tcolor: lighten($dark,30)\n\t&__mail\n\t\tposition: relative\n\t\tdisplay: inline-block\n\t\tfont-size: 14px\n\t\tcolor: #009fe0\n\t\t&:after\n\t\t\tcontent: ''\n\t\t\tposition: absolute\n\t\t\tleft: 0\n\t\t\tright: 0\n\t\t\tbottom: 1px\n\t\t\theight: 1px\n\t\t\tborder-top: 1px dotted #009fe0\n.header-bot\n\tbackground-color: $dark\n\t&-links\n\t\t+span(full)\n\t\t+pie-clearfix\n\t\t&__item\n\t\t\t+span(4)\n\t\t\tcolor: $light\n\t\t\ttext-align: center\n\t\t\tborder-left: 1px dotted $light\n\t\t\ttransition: all 0.3s\n\t\t\t&:last-child\n\t\t\t\tborder-right: 1px dotted $light\n\t\t\t&:hover\n\t\t\t\tcolor: $dark\n\t\t\t\tbackground-color: $light\n\t\t\t\ttransition: all 0.3s\n\t\t&__link\n\t\t\tdisplay: block\n\t\t\tpadding-top: 3px\n\t\t\tpadding-bottom: 3px\n\n/* ==========================================================================\n\t Footer\n\t ========================================================================== */\n.footer\n\tmargin-top: -40px\n\theight: 40px\n/* ==========================================================================\n\t Main\n\t ========================================================================== */\n.title\n\tmargin-bottom: 45px\n\t+calibri-b\n\tfont-size: 36px\n\tcolor: $dark\n\tline-height: 1\n\tfont-weight: normal\n\ttext-transform: uppercase\n\ttext-align: center\n\t+span(full)\n.section\n\tpadding-top: 45px\n\tpadding-bottom: 45px\n\t&_1\n\t\tbackground: url('../img/backgrounds/bg-1.jpg')\n\t\t+cover\n\t\t.title\n\t\t\tfont-size: 40px\n\t\t\tcolor: $white\n\t\t\ttext-align: left\n.form\n\t+span(9)\n\t+pre(3)\n\t&-wrap\n\t\tpadding-top: 25px\n\t\tpadding-bottom: 25px\n\t\tbackground: $light url('../img/backgrounds/bg-2.png') -115px 0 no-repeat\n\t\tbackground-size: auto 120%\n\t\tborder-radius: 10px\n\t\t+pie-clearfix\n\t&-title\n\t\tmargin-bottom: 45px\n\t\t+sans\n\t\tfont-size: 18px\n\t\tcolor: #1e242a\n\t\tline-height: 1\n\t\t+span(9)\n\t\t+pre(3)\n\t\t&_mod\n\t\t\tcolor: $red\n\t\t\tfont-weight: bold\n\t&__field\n\t\tposition: relative\n\t\t+span(3 of 9 no-gutters)\n\t\t+suffix(gutter())\n\t\t.icon\n\t\t\tposition: absolute\n\t\t\tleft: 15px\n\t\t\ttop: 15px\n\t&__input\n\t\twidth: 100%\n\t\tpadding-left: 40px\n\t\tpadding-right: 10px\n\t\theight: 44px\n\t\t+sans\n\t\tfont-size: inherit\n\t\tcolor: darken(#c4c5c7,30)\n\t\tline-height: 44px\n\t\tborder: 3px solid #dcdede\n\t\tbackground-color: #ffffff\n\t\tborder-radius: 6px\n\t\t+placeholder-color(#c4c5c7)\n\t&__submit\n\t\tposition: relative\n\t\ttop: 3px\n\t\tposition: relative\n\t\twidth: calc(100% - 6px)\n\t\theight: 38px\n\t\t+sans-b\n\t\tfont-size: inherit\n\t\tcolor: #ffffff\n\t\tline-height: 38px\n\t\ttext-transform: uppercase\n\t\tbackground-color: #dd2530\n\t\tbox-shadow: 0 0 0 3px #dcdede\n\t\tborder-radius: 4px\n\t\tborder-bottom: 2px solid #a71e22\n\t\ttext-shadow: -1px -1px 1px rgba(0,0,0,.3)\n\t\ttransition: all 0.3s\n\t\t&:before\n\t\t\tcontent: ''\n\t\t\tposition: absolute\n\t\t\tleft: 2px\n\t\t\tright: 2px\n\t\t\tbottom: 0\n\t\t\theight: 1px\n\t\t\tbackground-color: #d9453a\n\t\t&:hover\n\t\t\tbackground-color: darken(#dd2530,5)\n\t\t\ttransition: all 0.3s\n\n\n/* ==========================================================================\n\t Other Styles\n\t ========================================================================== */\n\n","// Debugging\n// =========\n\n// Susy Inspect\n// ------------\n// Output arguments passed to a inspect.\n// - $mixin  : <susy mixin>\n// - $inspec   : <mixin arguments>\n\n@mixin susy-inspect(\n  $mixin,\n  $inspect\n) {\n  $show: false;\n\n  @each $item in $inspect {\n    @if index($item, inspect) {\n      $show: true;\n    }\n  }\n\n  @if $show or susy-get(debug inspect) {\n    -susy-#{$mixin}: inspect($inspect);\n  }\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Background Properties\n// =====================\n\n// Susy Background Image\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-image>\n@mixin susy-background-image(\n  $image\n) {\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\n    @include background-image($image...);\n  } @else {\n    background-image: $image;\n  }\n}\n\n// Susy Background Size\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-size>\n@mixin susy-background-size(\n  $size\n) {\n  @if susy-support(background-options, (mixin: background-size)) {\n    @include background-size($size);\n  } @else {\n    background-size: $size;\n  }\n}\n\n// Susy Background Origin\n// ----------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-origin>\n@mixin susy-background-origin(\n  $origin\n) {\n  @if susy-support(background-options, (mixin: background-origin)) {\n    @include background-origin($origin);\n  } @else {\n    background-origin: $origin;\n  }\n}\n\n// Susy Background Clip\n// --------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-clip>\n@mixin susy-background-clip(\n  $clip\n) {\n  @if susy-support(background-options, (mixin: background-clip)) {\n    @include background-clip($clip);\n  } @else {\n    background-clip: $clip;\n  }\n}\n","// Background Grid Syntax\n// ======================\n\n$susy-overlay-grid-head-exists: false;\n\n\n// Show Grid/s\n// -----------\n// Show grid on any element using either background or overlay.\n// - [$grid]  : <settings>\n@mixin show-grid(\n  $grid: $susy\n) {\n  $inspect: $grid;\n  $_output: debug-get(output, $grid);\n\n  @include susy-inspect(show-grid, $inspect);\n  @if $_output == overlay and susy-get(debug image, $grid) != hide {\n    @include overlay-grid($grid);\n  } @else {\n    @include background-grid($grid);\n  }\n}\n\n@mixin show-grids(\n  $grid: $susy\n) {\n  @include show-grid($grid);\n}\n\n// Background Grid\n// ---------------\n// Show a grid background on any element.\n// - [$grid]  : <settings>\n@mixin background-grid(\n  $grid: $susy\n) {\n  $inspect  : $grid;\n  $_output  : get-background($grid);\n\n  @if length($_output) > 0 {\n    $_flow: susy-get(flow, $grid);\n\n    $_image: ();\n    @each $name, $layer in map-get($_output, image) {\n      $_direction: if($name == baseline, to bottom, to to($_flow));\n      $_image: append($_image, linear-gradient($_direction, $layer), comma);\n    }\n    $_output: map-merge($_output, (image: $_image));\n\n    @include background-grid-output($_output...);\n    @include susy-inspect(background-grid, $inspect);\n  }\n}\n\n\n// Overlay Grid\n// ------------\n// Generate an icon to trigger grid-overlays on any given elements.\n// $grids...  : <selector> [<settings>] [, <selector>]*\n@mixin overlay-grid (\n  $grid: $susy\n) {\n  @if not($susy-overlay-grid-head-exists) {\n    @at-root head { @include overlay-head($grid); }\n    @at-root head:before { @include overlay-trigger; }\n    @at-root head:hover { @include overlay-trigger-hover; }\n    $susy-overlay-grid-head-exists: true !global;\n  }\n\n  head:hover ~ &,\n  head:hover ~ body & {\n    position: relative;\n    &:before {\n      @include grid-overlay-base;\n      @include background-grid($grid);\n    }\n  }\n}\n\n\n// [Private] Overlay Trigger\n// -------------------------\n@mixin overlay-trigger {\n  content: \"|||\";\n  display: block;\n  padding: 5px 10px;\n  font: {\n    family: sans-serif;\n    size: 16px;\n    weight: bold;\n  }\n}\n\n\n// [Private] Overlay Trigger Hover\n// -------------------------------\n@mixin overlay-trigger-hover {\n  background: rgba(white, .5);\n  color: red;\n}\n\n\n// [Private] Overlay Head\n// ----------------------\n// <head> styles to create grid overlay toggle\n@mixin overlay-head (\n  $grid: $susy\n) {\n  $_toggle: debug-get(toggle, $grid);\n  $_horz: null;\n  $_vert: null;\n\n  @each $side in $_toggle {\n    $_horz: if($side == left or $side == right, $side, $_horz);\n    $_vert: if($side == top or $side == bottom, $side, $_vert);\n  }\n\n  display: block;\n  position: fixed;\n  #{$_horz}: 10px;\n  #{$_vert}: 10px;\n  z-index: 999;\n  color: #333;\n  background: rgba(white, .25);\n}\n\n\n// [Private] Grid Overlay Base\n// ---------------------------\n// Base styles for generating a grid overlay\n@mixin grid-overlay-base() {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  content: \" \";\n  z-index: 998;\n}\n\n\n// Get Symmetrical Background\n// --------------------------\n// - $grid: <map>\n@function get-background-sym(\n  $grid\n) {\n  $grid           : parse-grid($grid);\n  $_gutters       : susy-get(gutters, $grid);\n  $_column-width  : susy-get(column-width, $grid);\n  $_math          : susy-get(math, $grid);\n\n  $_color         : debug-get(color);\n  $_trans         : transparent;\n  $_light         : lighten($_color, 15%);\n\n  $_end           : 1 + $_gutters;\n  $_after         : percentage(1/$_end);\n  $_stops         : ();\n  $_size          : span(1 $grid wide);\n\n  @if is-inside($grid) {\n    $_stops: $_color, $_light;\n  } @else if is-split($grid) {\n    $_split: $_gutters/2;\n    $_before: percentage($_split/$_end);\n    $_after: percentage((1 + $_split)/$_end);\n    $_stops: $_trans $_before, $_color $_before, $_light $_after, $_trans $_after;\n  } @else {\n    $_stops: $_color, $_light $_after, $_trans $_after;\n  }\n\n  @if $_math == static {\n    $_size: valid-column-math($_math, $_column-width) * $_end;\n  }\n\n  $_output: (\n    image: (columns: $_stops),\n    size: $_size,\n  );\n\n  @return $_output;\n}\n\n\n// Get Asymmetrical Inside\n// -----------------------\n// - $grid: <settings>\n@function get-asym-inside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n      $this-stop: append($this-stop, $_light $_end, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Split\n// ----------------------\n// - $grid: <settings>\n@function get-asym-split(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    $start: parse-span(1 at $location $grid);\n    $start: get-isolation($start);\n    $this-stop: append($this-stop, transparent $start, comma);\n    $this-stop: append($this-stop, $_color $start, comma);\n\n    $_end: $start + span(1 at $location $grid);\n    $this-stop: append($this-stop, $_light $_end, comma);\n    $this-stop: append($this-stop, transparent $_end, comma);\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Outside\n// ------------------------\n// - $grid: <settings>\n@function get-asym-outside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_trans   : transparent;\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $gutter: get-span-width(first $location $grid);\n\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n\n      $gutter: $_light $gutter, $_trans $gutter, $_trans $_end;\n      $this-stop: join($this-stop, $gutter, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Background\n// ---------------------------\n// - $grid: <settings>\n@function get-background-asym(\n  $grid\n) {\n  $_stops: ();\n\n  @if is-inside($grid) {\n    $_stops: get-asym-inside($grid);\n  } @else if is-split($grid) {\n    $_stops: get-asym-split($grid);\n  } @else {\n    $_stops: get-asym-outside($grid);\n  }\n\n  @return (image: (columns: $_stops));\n}\n\n\n// Get Background\n// --------------\n// - $grid: <settings>\n@function get-background(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_show    : susy-get(debug image, $grid);\n  $_return  : ();\n\n  @if $_show and $_show != 'hide' {\n    $_columns: susy-get(columns, $grid);\n\n    @if $_show != 'show-baseline' {\n      $_sym: is-symmetrical($_columns);\n      $_return: if($_sym, get-background-sym($grid), get-background-asym($grid));\n      $_return: map-merge($_return, (clip: content-box));\n    }\n\n    @if $_show != 'show-columns'\n      and global-variable-exists(base-line-height)\n      and type-of($base-line-height) == 'number'\n      and not unitless($base-line-height) {\n      $_color: variable-exists('grid-background-baseline-color');\n      $_color: if($_color, $grid-background-baseline-color, #000);\n\n      $_image: map-get($_return, image);\n      $_size: map-get($_return, size);\n      $_baseline: (baseline: ($_color 1px, transparent 1px));\n      $_baseline-size: 100% $base-line-height;\n\n      $_return: map-merge($_return, (\n        image: if($_image, map-merge($_image, $_baseline), $_baseline),\n        size: if($_size, ($_size, $_baseline-size), $_baseline-size),\n      ));\n\n      @if $_show == 'show' {\n        $_clip: map-get($_return, clip);\n        $_return: map-merge($_return, (clip: join($_clip, border-box, comma)));\n      }\n    } @else if $_show == 'show-baseline' {\n      @warn 'Please provide a $base-line-height with the desired height and units';\n    }\n  }\n\n  @if map-get($_return, image) {\n    $_return: map-merge($_return, (flow: susy-get(flow, $grid)));\n  }\n\n  @return $_return;\n}\n\n\n// Get Debug\n// ---------\n// Return the value of a debug setting\n// - $key: <setting>\n@function debug-get(\n  $key,\n  $grid: $susy\n) {\n  $key: join(debug, $key, space);\n  @return susy-get($key, $grid);\n}\n","// Grid Background API\n// ===================\n// - Sub-pixel rounding can lead to several pixels variation between browsers.\n\n// Grid Background Output\n// ----------------------\n// - $image: background-image\n// - $size: background-size\n// - $clip: background-clip\n// - [$flow]: ltr | rtl\n@mixin background-grid-output (\n  $image,\n  $size: null,\n  $clip: null,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    background-image: $image,\n    background-size: $size,\n    background-origin: $clip,\n    background-clip: $clip,\n    background-position: from($flow) top,\n  );\n\n  @include output($output);\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Float Span API\n// ==============\n\n// Float Span Output\n// -----------------\n// - $width             : <length>\n// - [$float]           : from | to\n// - [$margin-before]   : <length>\n// - [$margin-after]    : <length>\n// - [$padding-before]  : <length>\n// - [$padding-after]   : <length>\n// - [$flow]            : ltr | rtl\n@mixin float-span-output(\n  $width,\n  $float            : from,\n  $margin-before    : null,\n  $margin-after     : null,\n  $padding-before   : null,\n  $padding-after    : null,\n  $flow             : map-get($susy-defaults, flow)\n) {\n  $to     : to($flow);\n  $from   : from($flow);\n\n  $output: (\n    width: $width,\n    float: if($float == to, $to, null) or if($float == from, $from, null),\n    margin-#{$from}: $margin-before,\n    margin-#{$to}: $margin-after,\n    padding-#{$from}: $padding-before,\n    padding-#{$to}: $padding-after,\n  );\n\n  @include output($output);\n}\n","// Margin Syntax\n// =============\n\n// Pre\n// ---\n// Add spanning-margins before an element.\n// - $span  : <span>\n@mixin pre(\n  $span\n) {\n  $inspect: $span;\n  $span   : map-merge((spread: wide), parse-span($span));\n  $flow   : susy-get(flow, $span);\n  $split  : if(susy-get(gutter-position, $span) == split, true, false);\n  $gutter : gutter($span);\n  $span   : span($span);\n  $width  : if($split and $gutter, $span + $gutter, $span);\n\n  @include susy-inspect(pre, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Post\n// ----\n// Add spanning-margins after an element.\n// - $span  : <span>\n@mixin post(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, span($span) + gutter($span), span($span));\n\n  @include susy-inspect(post, $inspect);\n  @include margin-output(null, $width, $flow);\n}\n\n// Push\n// ----\n// Simple synonymn for pre.\n// - $span  : <span>\n@mixin push(\n  $span\n) {\n  @include pre($span);\n}\n\n// Pull\n// ----\n// Add negative spanning-margins before an element.\n// - $span  : <span>\n@mixin pull(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, 0 - span($span) + gutter($span), 0 - span($span));\n\n  @include susy-inspect(pull, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Squish\n// ------\n// Add spanning-margins before and after an element.\n// - $pre     : <span>\n// - [$post]  : <span>\n@mixin squish(\n  $pre,\n  $post: false\n) {\n  $inspect      : ($pre, $post);\n  $pre          : map-merge((spread: wide), parse-span($pre));\n\n  @if $post {\n    $post: map-merge((spread: wide), parse-span($post));\n  } @else {\n    $span: susy-get(span, $pre);\n    @if length($span) > 1 {\n      $pre: map-merge($pre, (span: nth($span, 1)));\n      $post: map-merge($pre, (span: nth($span, 2)));\n    } @else {\n      $post: $pre;\n    }\n  }\n\n  @include susy-inspect(squish, $inspect);\n  @include pre($pre);\n  @include post($post);\n}\n","// Padding Syntax\n// ==============\n\n// Prefix\n// ------\n// Add spanning-padding before an element.\n// - $span  : <span>\n@mixin prefix(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $width    : span($span);\n\n  @if is-inside($span) {\n    $gutter: gutter($span);\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\n  }\n\n  @include susy-inspect(prefix, $inspect);\n  @include padding-output($width, null, $flow);\n}\n\n// Suffix\n// ------\n// Add spanning-padding after an element.\n// - $span  : <span>\n@mixin suffix(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $width    : span($span);\n\n  @if is-inside($span) {\n    $gutter: gutter($span);\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\n  }\n\n  @include susy-inspect(suffix, $inspect);\n  @include padding-output(null, $width, $flow);\n}\n\n// Pad\n// ---\n// Add spanning-padding before and after an element.\n// - $pre     : <span>\n// - [$post]  : <span>\n@mixin pad(\n  $pre,\n  $post: false\n) {\n  $inspect  : ($pre, $post);\n  $pre      : map-merge((spread: wide), parse-span($pre));\n\n  @if $post {\n    $post: map-merge((spread: wide), parse-span($post));\n  } @else {\n    $span: susy-get(span, $pre);\n    @if length($span) > 1 {\n      $pre: map-merge($pre, (span: nth($span, 1)));\n      $post: map-merge($pre, (span: nth($span, 2)));\n    } @else {\n      $post: $pre;\n    }\n  }\n\n  @include susy-inspect(pad, $inspect);\n  @include prefix($pre);\n  @include suffix($post);\n\n}\n"],"sourceRoot":"/source/"}
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5,
h6, p, blockquote, pre, a, abbr, acronym, address, big,
cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small,
strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt,
dd, ol, ul, li, fieldset, form, label, legend, table, caption,
tbody, tfoot, thead, tr, th, td, article, aside, canvas, details,
embed, figure, figcaption, footer, header, hgroup, menu, nav,
output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline; }

body, html {
  height: 100%; }

img, fieldset, a img {
  border: none; }

input[type="text"],
input[type="email"],
input[type="tel"],
textarea {
  -webkit-appearance: none; }

input[type="submit"],
button {
  cursor: pointer; }
  input[type="submit"]::-moz-focus-inner,
  button::-moz-focus-inner {
    padding: 0;
    border: 0; }

textarea {
  overflow: auto; }

input, button {
  margin: 0;
  padding: 0;
  border: 0; }

div, input, textarea, select, button,
h1, h2, h3, h4, h5, h6, a, span, a:focus {
  outline: none; }

ul, ol {
  list-style-type: none; }

table {
  border-spacing: 0;
  border-collapse: collapse;
  width: 100%; }

.disable-hover {
  pointer-events: none !important; }

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

a {
  color: inherit; }

/* 
 *  Core Owl Carousel CSS File
 */
.owl-carousel {
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1; }

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y; }

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  visibility: hidden;
  line-height: 0;
  height: 0; }

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px); }

.owl-carousel .owl-item {
  position: relative;
  min-height: 1px;
  float: left;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none; }

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
  -webkit-transform-style: preserve-3d; }

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none; }

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  cursor: hand;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.owl-carousel.owl-loaded {
  display: block; }

.owl-carousel.owl-loading {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  display: block; }

.owl-carousel.owl-hidden {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"; }

.owl-carousel.owl-refresh .owl-item {
  display: none; }

.owl-carousel.owl-drag .owl-item {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: -o-grab;
  cursor: -ms-grab;
  cursor: -moz-grab;
  cursor: grab; }

.owl-carousel.owl-rtl {
  direction: rtl; }

.owl-carousel.owl-rtl .owl-item {
  float: right; }

/* No Js */
.no-js .owl-carousel {
  display: block; }

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

.icon-phone {
  width: 16px;
  height: 15px;
  background-image: url("../img/icons.png");
  background-position: 0px 0px;
  -moz-background-size: 32px 15px;
  -o-background-size: 32px 15px;
  background-size: 32px 15px; }

.icon-user {
  width: 12px;
  height: 13px;
  background-image: url("../img/icons.png");
  background-position: -20px 0px;
  -moz-background-size: 32px 15px;
  -o-background-size: 32px 15px;
  background-size: 32px 15px; }

@font-face {
  font-family: "Calibri Light";
  src: url("../css/fonts/subset-Calibri-Light.eot");
  src: url("../css/fonts/subset-Calibri-Light.eot?#iefix") format("embedded-opentype"), url("../css/fonts/subset-Calibri-Light.woff") format("woff"), url("../css/fonts/subset-Calibri-Light.woff2") format("woff2"), url("../css/fonts/subset-Calibri-Light.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: "Calibri";
  src: url("../css/fonts/subset-Calibri.eot");
  src: url("../css/fonts/subset-Calibri.eot?#iefix") format("embedded-opentype"), url("../css/fonts/subset-Calibri.woff") format("woff"), url("../css/fonts/subset-Calibri.woff2") format("woff2"), url("../css/fonts/subset-Calibri.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }
@font-face {
  font-family: "Calibri Bold";
  src: url("../css/fonts/subset-Calibri-Bold.eot");
  src: url("../css/fonts/subset-Calibri-Bold.eot?#iefix") format("embedded-opentype"), url("../css/fonts/subset-Calibri-Bold.woff") format("woff"), url("../css/fonts/subset-Calibri-Bold.woff2") format("woff2"), url("../css/fonts/subset-Calibri-Bold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }
/* ==========================================================================
 * Main Styles
 * ========================================================================== */
a:hover, a:focus {
  text-decoration: none; }

a {
  color: inherit;
  text-decoration: none; }

svg {
  width: 100%;
  height: 100%; }

.is-hidden {
  display: none; }

.row:before, .row:after {
  content: "";
  display: table; }
.row:after {
  clear: both; }

body {
  min-width: 1000px;
  font-family: "Calibri", Arial, sans-serif;
  font-size: 16px;
  color: #343c44;
  line-height: 1.375;
  background-color: #ffffff; }

.wrapper {
  overflow: hidden;
  margin: 0 auto;
  min-height: 100%;
  padding-bottom: 40px; }

.wrap {
  -susy-container: (container: 1000px, gutter-position: inside, columns: 12, gutters: 1, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));
  max-width: 1000px;
  margin-left: auto;
  margin-right: auto;
  -susy-show-grid: (container: 1000px, gutter-position: inside, columns: 12, gutters: 1, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(203, 48, 48, 0.25)), to(rgba(220, 107, 107, 0.25)));
  background-image: -webkit-linear-gradient(left, rgba(203, 48, 48, 0.25), rgba(220, 107, 107, 0.25));
  background-image: -moz-linear-gradient(left, rgba(203, 48, 48, 0.25), rgba(220, 107, 107, 0.25));
  background-image: -o-linear-gradient(left, rgba(203, 48, 48, 0.25), rgba(220, 107, 107, 0.25));
  background-image: linear-gradient(to right, rgba(203, 48, 48, 0.25), rgba(220, 107, 107, 0.25));
  -moz-background-size: 8.33333%;
  -o-background-size: 8.33333%;
  background-size: 8.33333%;
  -moz-background-origin: content-box;
  -o-background-origin: content-box;
  background-origin: content-box;
  -moz-background-clip: content-box;
  -o-background-clip: content-box;
  background-clip: content-box;
  background-position: left top;
  -susy-background-grid: (container: 1000px, gutter-position: inside, columns: 12, gutters: 1, debug: (image: show, color: rgba(203, 48, 48, 0.25), inspect: true));
  -webkit-transition: all 0.3s;
  -moz-transition: all 0.3s;
  -o-transition: all 0.3s;
  transition: all 0.3s; }
  .wrap:after {
    content: " ";
    display: block;
    clear: both; }

/* ==========================================================================
 * Header
 * ========================================================================== */
.header__btn {
  margin-bottom: 10px;
  width: 100%;
  height: 40px;
  font-size: 16px;
  color: #ffffff;
  line-height: 40px;
  text-align: center;
  -webkit-border-radius: 6px;
  -moz-border-radius: 6px;
  border-radius: 6px;
  background-color: transparent; }
  .header__btn_red {
    background-color: #d2252b; }
  .header__btn_grey {
    background-color: #40403e; }
.header-top {
  background-color: #40403e;
  font-family: "Calibri", Arial, sans-serif;
  font-size: 14px;
  color: #f1f0ef; }
  .header-top:before, .header-top:after {
    content: "";
    display: table; }
  .header-top:after {
    clear: both; }
.header-links {
  float: right;
  padding-left: 2.08333%;
  padding-right: 2.08333%; }
  .header-links:before, .header-links:after {
    content: "";
    display: table; }
  .header-links:after {
    clear: both; }
  .header-links__item {
    float: left;
    padding: 5px;
    background-color: #20201e; }
    .header-links__item + .header-links__item {
      border-left: 1px dotted #f1f0ef; }
  .header-links__link {
    text-decoration: underline; }
    .header-links__link:hover {
      text-decoration: underline; }
.header-mid {
  padding-top: 45px;
  padding-bottom: 45px;
  font-family: "Calibri Light", Arial, sans-serif;
  font-size: 16px;
  background-color: #f1f0ef; }
  .header-mid:before, .header-mid:after {
    content: "";
    display: table; }
  .header-mid:after {
    clear: both; }
  .header-mid__col {
    -susy-span: 3;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 25%;
    float: left;
    padding-left: 2.08333%;
    padding-right: 2.08333%;
    -susy-nested: (span: 3); }

.nav {
  float: left;
  padding-left: 2.08333%;
  padding-right: 2.08333%; }
  .nav:before, .nav:after {
    content: "";
    display: table; }
  .nav:after {
    clear: both; }
  .nav__item {
    float: left; }
    .nav__item + .nav__item {
      margin-left: 15px; }
  .nav__link {
    display: block;
    padding-top: 5px;
    padding-bottom: 5px; }
    .nav__link:hover, .nav__link.is-active {
      text-decoration: underline; }

.logo {
  position: relative;
  top: -5px; }
  .logo__link {
    overflow: hidden;
    display: block;
    width: auto;
    height: 120px;
    text-indent: -9999px;
    font-family: "Lucida Console", Monaco, monospace;
    font-size: 16px;
    font-weight: bold;
    text-transform: uppercase;
    text-align: center;
    background: url("../img/logo.png") center center no-repeat;
    -moz-background-size: 100% auto;
    -o-background-size: 100% auto;
    background-size: 100% auto; }

.location {
  color: #f1f0ef; }
  .location__text {
    margin-top: 10px;
    margin-bottom: 10px;
    font-family: Arial, sans-serif;
    font-size: 14px;
    color: #6f6f68; }
  .location__link {
    position: relative;
    display: inline-block;
    color: #009fe0;
    letter-spacing: -0.03em; }
    .location__link:after {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      bottom: 1px;
      height: 1px;
      border-top: 1px dotted #009fe0; }
  .location__country {
    display: inline-block;
    padding: 2px 10px;
    background-color: #20201e; }
  .location .selectric {
    border: none;
    background-color: transparent; }
    .location .selectric .label {
      position: relative;
      margin: 0;
      padding-top: 2px;
      height: auto;
      line-height: 1.375;
      font-size: inherit;
      color: #f1f0ef; }
      .location .selectric .label:after {
        content: "";
        position: absolute;
        left: 0;
        right: 0;
        bottom: 1px;
        height: 1px;
        border-top: 1px dotted #f1f0ef; }
    .location .selectric .button {
      display: none; }
    .location .selectric-wrapper {
      display: inline-block;
      vertical-align: middle; }
  .location .selectric-open .selectric-items {
    min-width: 120px; }
  .location .selectric-items {
    margin-top: 1px;
    border-color: #6f6f68; }
    .location .selectric-items li {
      padding: 1px 8px;
      color: #f1f0ef;
      background-color: #20201e; }
      .location .selectric-items li.selected {
        color: #f1f0ef;
        background-color: #6f6f68; }

.header-contacts__phone {
  display: inline-block;
  margin-bottom: 9px;
  font-size: 22px;
  color: #6f6f68; }
.header-contacts__mail {
  position: relative;
  display: inline-block;
  font-size: 14px;
  color: #009fe0; }
  .header-contacts__mail:after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    bottom: 1px;
    height: 1px;
    border-top: 1px dotted #009fe0; }

.header-bot {
  background-color: #20201e; }
  .header-bot-links {
    -susy-span: full;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 100%;
    float: left;
    padding-left: 2.08333%;
    padding-right: 2.08333%; }
    .header-bot-links:before, .header-bot-links:after {
      content: "";
      display: table; }
    .header-bot-links:after {
      clear: both; }
    .header-bot-links__item {
      -susy-span: 4;
      -moz-box-sizing: border-box;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      width: 33.33333%;
      float: left;
      padding-left: 2.08333%;
      padding-right: 2.08333%;
      -susy-nested: (span: 4);
      color: #f1f0ef;
      text-align: center;
      border-left: 1px dotted #f1f0ef;
      -webkit-transition: all 0.3s;
      -moz-transition: all 0.3s;
      -o-transition: all 0.3s;
      transition: all 0.3s; }
      .header-bot-links__item:last-child {
        border-right: 1px dotted #f1f0ef; }
      .header-bot-links__item:hover {
        color: #20201e;
        background-color: #f1f0ef;
        -webkit-transition: all 0.3s;
        -moz-transition: all 0.3s;
        -o-transition: all 0.3s;
        transition: all 0.3s; }
    .header-bot-links__link {
      display: block;
      padding-top: 3px;
      padding-bottom: 3px; }

/* ==========================================================================
 * Footer
 * ========================================================================== */
.footer {
  margin-top: -40px;
  height: 40px; }

/* ==========================================================================
 * Main
 * ========================================================================== */
.title {
  margin-bottom: 45px;
  font-family: "Calibri Bold", Arial, sans-serif;
  font-size: 36px;
  color: #20201e;
  line-height: 1;
  font-weight: normal;
  text-transform: uppercase;
  text-align: center;
  -susy-span: full;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 100%;
  float: left;
  padding-left: 2.08333%;
  padding-right: 2.08333%; }

.section {
  padding-top: 45px;
  padding-bottom: 45px; }
  .section_1 {
    background: url("../img/backgrounds/bg-1.jpg");
    background-repeat: no-repeat;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    background-position: 50% 50%; }
    .section_1 .title {
      font-size: 40px;
      color: #ffffff;
      text-align: left; }

.form {
  -susy-span: 9;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  width: 75%;
  float: left;
  padding-left: 2.08333%;
  padding-right: 2.08333%;
  -susy-nested: (span: 9);
  -susy-pre: 3;
  margin-left: 25%; }
  .form-wrap {
    padding-top: 25px;
    padding-bottom: 25px;
    background: #f1f0ef url("../img/backgrounds/bg-2.png") -115px 0 no-repeat;
    -moz-background-size: auto 120%;
    -o-background-size: auto 120%;
    background-size: auto 120%;
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    border-radius: 10px; }
    .form-wrap:before, .form-wrap:after {
      content: "";
      display: table; }
    .form-wrap:after {
      clear: both; }
  .form-title {
    margin-bottom: 45px;
    font-family: "PT Sans", Arial, sans-serif;
    font-weight: 400;
    font-size: 18px;
    color: #1e242a;
    line-height: 1;
    -susy-span: 9;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 75%;
    float: left;
    padding-left: 2.08333%;
    padding-right: 2.08333%;
    -susy-nested: (span: 9);
    -susy-pre: 3;
    margin-left: 25%; }
    .form-title_mod {
      color: #d2252b;
      font-weight: bold; }
  .form__field {
    position: relative;
    -susy-span: 3 of 9 no-gutters;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: 33.33333%;
    float: left;
    -susy-nested: (span: 3, gutter-override: no-gutters, columns: 9);
    -susy-suffix: 2.08333%;
    padding-right: 4.16667%; }
    .form__field .icon {
      position: absolute;
      left: 15px;
      top: 15px; }
  .form__input {
    width: 100%;
    padding-left: 40px;
    padding-right: 10px;
    height: 44px;
    font-family: "PT Sans", Arial, sans-serif;
    font-weight: 400;
    font-size: inherit;
    color: #76787c;
    line-height: 44px;
    border: 3px solid #dcdede;
    background-color: #ffffff;
    -webkit-border-radius: 6px;
    -moz-border-radius: 6px;
    border-radius: 6px; }
    .form__input:-moz-placeholder, .form__input::-moz-placeholder {
      color: #c4c5c7;
      opacity: 1;
      -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)"; }
    .form__input::-webkit-input-placeholder {
      color: #c4c5c7; }
  .form__submit {
    position: relative;
    top: 3px;
    position: relative;
    width: -webkit-calc(100% - 6px);
    width: -moz-calc(100% - 6px);
    width: calc(100% - 6px);
    height: 38px;
    font-family: "PT Sans", Arial, sans-serif;
    font-weight: 700;
    font-size: inherit;
    color: #ffffff;
    line-height: 38px;
    text-transform: uppercase;
    background-color: #dd2530;
    -webkit-box-shadow: 0 0 0 3px #dcdede;
    -moz-box-shadow: 0 0 0 3px #dcdede;
    box-shadow: 0 0 0 3px #dcdede;
    -webkit-border-radius: 4px;
    -moz-border-radius: 4px;
    border-radius: 4px;
    border-bottom: 2px solid #a71e22;
    text-shadow: -1px -1px 1px rgba(0, 0, 0, 0.3);
    -webkit-transition: all 0.3s;
    -moz-transition: all 0.3s;
    -o-transition: all 0.3s;
    transition: all 0.3s; }
    .form__submit:before {
      content: "";
      position: absolute;
      left: 2px;
      right: 2px;
      bottom: 0;
      height: 1px;
      background-color: #d9453a; }
    .form__submit:hover {
      background-color: #c91f2a;
      -webkit-transition: all 0.3s;
      -moz-transition: all 0.3s;
      -o-transition: all 0.3s;
      transition: all 0.3s; }

/* ==========================================================================
 * Other Styles
 * ========================================================================== */
/*# sourceMappingURL=screen.css.map */

/*======================================
  Selectric v1.9.6
======================================*/

.selectric-wrapper {
  position: relative;
  cursor: pointer;
}

.selectric-responsive {
  width: 100%;
}

.selectric {
  border: 1px solid #DDD;
  background: #F8F8F8;
  position: relative;
}
.selectric .label {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin: 0 38px 0 10px;
  font-size: 12px;
  line-height: 38px;
  color: #444;
  height: 38px;
}
.selectric .button {
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  width: 38px;
  height: 38px;
  color: #BBB;
  text-align: center;
  font: 0/0 a;
  *font: 20px / 38px Lucida Sans Unicode, Arial Unicode MS, Arial;
}
.selectric .button:after {
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  width: 0;
  height: 0;
  border: 4px solid transparent;
  border-top-color: #BBB;
  border-bottom: none;
}

.selectric-hover .selectric {
  border-color: #C4C4C4;
}
.selectric-hover .selectric .button {
  color: #A2A2A2;
}
.selectric-hover .selectric .button:after {
  border-top-color: #A2A2A2;
}

.selectric-open {
  z-index: 9999;
}
.selectric-open .selectric {
  border-color: #C4C4C4;
}
.selectric-open .selectric-items {
  display: block;
}

.selectric-disabled {
  filter: alpha(opacity=50);
  opacity: 0.5;
  cursor: default;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.selectric-hide-select {
  position: relative;
  overflow: hidden;
  width: 0;
  height: 0;
}
.selectric-hide-select select {
  position: absolute;
  left: -100%;
  display: none;
}

.selectric-input {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  margin: 0 !important;
  padding: 0 !important;
  width: 1px !important;
  height: 1px !important;
  outline: none !important;
  border: none !important;
  *font: 0/0 a !important;
  background: none !important;
}

.selectric-temp-show {
  position: absolute !important;
  visibility: hidden !important;
  display: block !important;
}

/* Items box */
.selectric-items {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  background: #F8F8F8;
  border: 1px solid #C4C4C4;
  z-index: -1;
  box-shadow: 0 0 10px -6px;
}
.selectric-items .selectric-scroll {
  height: 100%;
  overflow: auto;
}
.selectric-above .selectric-items {
  top: auto;
  bottom: 100%;
}
.selectric-items ul, .selectric-items li {
  list-style: none;
  padding: 0;
  margin: 0;
  font-size: 12px;
  line-height: 20px;
  min-height: 20px;
}
.selectric-items li {
  display: block;
  padding: 8px;
  border-top: 1px solid #FFF;
  border-bottom: 1px solid #EEE;
  color: #666;
  cursor: pointer;
}
.selectric-items li.selected {
  background: #EFEFEF;
  color: #444;
}
.selectric-items li:hover {
  background: #F0F0F0;
  color: #444;
}
.selectric-items .disabled {
  filter: alpha(opacity=50);
  opacity: 0.5;
  cursor: default !important;
  background: none !important;
  color: #666 !important;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}
.selectric-items .selectric-group .selectric-group-label {
  font-weight: bold;
  padding-left: 10px;
  cursor: default;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  background: none;
  color: #444;
}
.selectric-items .selectric-group.disabled li {
  filter: alpha(opacity=100);
  opacity: 1;
}
.selectric-items .selectric-group li {
  padding-left: 25px;
}
